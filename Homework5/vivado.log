#-----------------------------------------------------------
# Vivado v2018.3 (64-bit)
# SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
# Start of session at: Fri Feb 22 14:47:38 2019
# Process ID: 10308
# Current directory: C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5
# Command line: vivado.exe -mode tcl Homework5
# Log file: C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/vivado.log
# Journal file: C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5\vivado.jou
#-----------------------------------------------------------
open_project Homework5
Scanning sources...
Finished scanning sources
Vivado% simulation
invalid command name "simulation"
Vivado% run
ERROR: [Simulator 45-6] No active Vivado Simulator simulation.  To use this command you must first start a simulation using Vivado Simulator.

Vivado% simulation
invalid command name "simulation"
Vivado% help
WARNING: [Common 17-20] Did not find any categories for task 'platform_verify'
Topic Categories:
Bitgen
Board
CDC
DRC
Debug
Device
Feasibility
FileIO
Floorplan
GUIControl
IPFlow
IPIntegrator
Memory
Memory Initialization
Methodology
Netlist
Object
Partition
PinPlanning
Power
Project
PropertyAndParameter
Report
SDAccel
SDC
SDSoC
Simulation
SysGen
Tcl
TclBuiltIn
TclPackage
Timing
ToolLaunch
Tools
Waiver
Waveform
XDC
XPS
projutils
simulation
synthesis
user-written
xilinxtclstore
To list help topics by category, type 'help -category <category>'. For example:
% help -category Project

Vivado% Simulation
invalid command name "Simulation"
Vivado% help -category Simulation

Topic                    Description
add_bp                   Add breakpoint at a line of a HDL source
add_condition            Conditionally execute Tcl commands
add_files                Add sources to the active fileset
add_force                Force value of signal, wire, or reg to a specified 
                         value
checkpoint_vcd           Create a VCD checkpoint (equivalent of Verilog 
                         $dumpall system task)
close_saif               Flush SAIF toggle information to the SAIF output file 
                         and close the file
close_sim                Unload the current simulation without exiting Vivado
close_vcd                Flush VCD information to the VCD output file and close
                         the file
compile_simlib           Compile simulation libraries
config_compile_simlib    Configure settings for compile_simlib
create_fileset           Create a new fileset
current_frame            Get index of the selected subprogram frame (default, 
                         top i.e. most recent subprogram call) in the 
                         call-stack of the HDL process scope (current_scope). 
                         Sets current stack frame for the subprogram call-stack
                         of the current_scope.
current_scope            Get the current scope or set the current scope
current_sim              Set the current simulation object or get the current 
                         simulation object
current_time             Report current simulation time
current_vcd              Return the current VCD object or make VCDObject the 
                         current VCD object
delete_fileset           Delete a fileset
describe                 Describe an HDL object (variable, signal, wire, or 
                         reg) by printing type and declaration information
export_ip_user_files     (User-written application)
                         Generate and export IP/IPI 
                         user files from a project. This can be scoped to work 
                         on one or more IPs.
                         Argument Usage:
                         [-of_objects 
                         <arg>]: IP,IPI or a fileset object
                         [-ip_user_files_dir
                         <arg>]: Directory path to simulation base directory 
                         (for static, dynamic, wrapper, netlist, script and MEM
                         files)
                         [-ipstatic_source_dir <arg>]: Directory path to
                         the IP static files
                         [-lib_map_path <arg> = Empty]: 
                         Compiled simulation library directory 
                         path
                         [-no_script]: Do not export simulation 
                         scripts
                         [-sync]: Delete IP/IPI dynamic and simulation 
                         script files
                         [-reset]: Delete all IP/IPI static, 
                         dynamic and simulation script files
                         [-force]: 
                         Overwrite files
                         
export_simulation        (User-written application)
                         Export a script and 
                         associated data files (if any) for driving standalone 
                         simulation using the specified simulator.
                         
flush_vcd                Flush VCD simulation output to the VCD output file 
                         (equivalent of $dumpflush verilog system task)
generate_mem_files       Write all the simulation .mem files.
get_objects              Get a list of HDL objects in one or more HDL scopes as
                         per the specified pattern
get_scopes               Get a list of children HDL scopes of a scope
get_simulators           Get registered simulators
get_stacks               Get list of processes in a design, which are waiting 
                         inside a subprogram
get_value                Get current value of the selected HDL object 
                         (variable, signal, wire, reg)
import_files             Import files and/or directories into the active 
                         fileset
launch_simulation        Launch simulation
limit_vcd                Limit the maximum size of the VCD file on disk 
                         (equivalent of $dumplimit verilog task)
log_saif                 Log Switching Activity Interchange Format (SAIF) 
                         toggle for specified wire, signal, or reg
log_vcd                  Log Value Change Dump (VCD) simulation output for 
                         specified wire, signal, or reg
log_wave                 Log simulation output for specified wire, signal, or 
                         reg for viewing using Vivado Simulators waveform 
                         viewer. Unlike add_wave, this command does not add the
                         waveform object to waveform viewer (i.e. Waveform 
                         Configuration). It simply enables logging of output to
                         the Vivado Simulators Waveform Database (WDB).
ltrace                   Turns on or off printing of file name and line number 
                         of the hdl statement being simulated
move_files               Moves the files from one fileset to another while 
                         maintaining all of their original properties.
open_saif                Open file for storing signal switching rate for power 
                         estimation. The switching rate is written out in 
                         Switching Activity Interchange Format (SAIF) Only one 
                         SAIF is allowed to be open per simulation run.
open_vcd                 Open a Value Change Dump (VCD) file for capturing 
                         simulation output. This Tcl command models behavior of
                         $dumpfile Verilog system task 
open_wave_database       Open Waveform Database (WDB) file produced by a prior 
                         simulation run and return a simulation object
ptrace                   Turns on or off printing of name of the hdl process 
                         being simulated
read_saif                Import simulation data in saif format
relaunch_sim             Recompile the design without changing compilation 
                         options and restart the current simulation
remove_bps               Remove breakpoints from a simulation
remove_conditions        Remove conditions from a simulation. The names can be 
                         specified as Tcl glob pattern
remove_files             Remove files or directories from a fileset
remove_forces            Release force on signal, wire, or reg applied using 
                         'add_force' command
report_bps               Print details of the given breakpoint objects
report_conditions        Print details of the given condition objects
report_drivers           Print drivers along with current driving values for an
                         HDL wire or signal object
report_frames            Print, in textual format, stack frames when 
                         current_scope is a process waiting inside subprogram 
report_objects           Print details of the given hdl objects (variable, 
                         signal, wire, or reg)
report_scopes            Print names of the children scopes (declarative 
                         regions) of given scope(s) or the current scope
report_simlib_info       Report info of simulation libraries
report_stacks            Print names of processes in a design, which are 
                         waiting inside a subprogram, in textual format
report_values            Print current simulated value of given HDL objects 
                         (variable, signal, wire, or reg)
reset_simulation         Reset an existing simulation run
restart                  Rewind simulation to post loading state (as if design 
                         was reloaded), time is set to 0
run                      Run the simulation for the specified time
set_value                Set the current value of an HDL object (variable, 
                         signal, wire, or reg) to a specified value
setup_ip_static_library  (User-written application)
                         Extract IP static files 
                         from the project or repository and prepare it for 
                         compile_simlib
                         Argument Usage:
                         [-directory <arg>]: 
                         Extract static files in the specified 
                         directory
                         [-ip_repo_path <arg>]: Extract static files 
                         from the specified IP repository path
                         [-ips <arg> = 
                         Empty]: Extract static files for the specified IPs 
                         only
                         [-project]: Extract static files for the current 
                         project
                         [-install]: Extract static files for the IP 
                         catalog
                         [-no_update_catalog]: Do no update IP 
                         catalog
                         [-force]: Overwrite static files
                         
start_vcd                Start capturing VCD output (equivalent of $dumpon 
                         verilog system task). This can be used after a 
                         stop_vcd TCL command has stopped VCD generation 
                         started by open_vcd
step                     Step simulation to the next statement
stop                     Use within a condition to tell simulation to stop when
                         a condition is true
stop_vcd                 Stop capturing VCD output (equivalent of $dumpoff 
                         verilog system task). The start_vcd TCL command can be
                         used to resume capturing VCD
write_sdf                write_sdf command generates flat sdf delay files for 
                         event simulation
write_verilog            Export the current netlist in Verilog format
write_vhdl               Export the current netlist in VHDL format
xsim                     Load a simulation snapshot for simulation and return a
                         simulation object

For help on an individual topic, type 'help <topic>'. For example:
% help create_project

Vivado% xsim
ERROR: [Common 17-163] Missing value for option 'snapshot', please type 'xsim -help' for usage info.

Vivado% xsim -help
xsim

Description: 
Load a simulation snapshot for simulation and return a simulation object

Syntax: 
xsim  [-view <args>] [-autoloadwcfg] [-runall] [-R] [-maxdeltaid <arg>]
      [-nolog] [-maxlogsize <arg>] [-onfinish <arg>] [-onerror <arg>]
      [-tclbatch <args>] [-t <args>] [-testplusarg <args>] [-vcdfile <arg>]
      [-vcdunit <arg>] [-wdb <arg>] [-tp] [-tl] [-nosignalhandlers]
      [-ieeewarnings] [-stats] [-scNoLogFile] [-sv_seed <arg>]
      [-protoinst <args>] [-cov_db_dir <arg>] [-cov_db_name <arg>]
      [-ignore_assertions] [-ignore_coverage] [-downgrade_error2info]
      [-downgrade_error2warning] [-downgrade_fatal2info]
      [-downgrade_fatal2warning] [-ignore_feature <args>]
      [-downgrade_severity <args>] [-quiet] [-verbose] <snapshot>

Returns: 
Current simulation object

Usage: 
  Name                        Description
  ---------------------------------------
  [-view]                     Open a wave configuration file. This switch may
                              be repeated to open multiple files.
  [-autoloadwcfg]             For a WDB file named <name>.wdb, automatically 
                              open all WCFG files named <name>#.wcfg.  
                              Ignored if -view is present.
  [-runall]                   Run simulation until completion, then quit 
                              (does 'run -all; exit')
  [-R]                        Run simulation until completion, then quit 
                              (does 'run -all; exit')
  [-maxdeltaid]               Specify the maximum delta number. Will report 
                              error if it exceeds maximum simulation loops at
                              the same time
                              Default: 10000
  [-nolog]                    Ignored (for compatibility with xsim 
                              command-line tool)
  [-maxlogsize]               Set the maximum size a log file can reach in 
                              MB. The default setting is unlimited
                              Default: -1
  [-onfinish]                 Specify behavior at end of simulation: 
                              quit|stop
                              Default: stop
  [-onerror]                  Specify behavior upon simulation run-time 
                              error: quit|stop
                              Default: stop
  [-tclbatch]                 Specify the TCL file for batch mode execution
  [-t]                        Specify the TCL file for batch mode execution
  [-testplusarg]              Specify plusargs to be used by $test$plusargs 
                              and $value$plusargs system functions
  [-vcdfile]                  Specify the vcd output file
  [-vcdunit]                  Specify the vcd output unit.  Default is the 
                              same as the engine precision unit
  [-wdb]                      Specify the waveform database output file
  [-tp]                       Enable printing of hierarchical names of 
                              process being executed
  [-tl]                       Enable printing of file name and line number of
                              statements being executed.
  [-nosignalhandlers]         Run with no signal handlers to avoid conflict 
                              with security software
  [-ieeewarnings]             Enable warnings from VHDL IEEE functions
  [-stats]                    Display memory and cpu stats upon exiting
  [-scNoLogFile]              Keep the SystemC output separate from XSim 
                              output
  [-sv_seed]                  Seed for constraint random stimulus
                              Default: 1
  [-protoinst]                Specify a .protoinst file for protocol analysis
  [-cov_db_dir]               System Verilog Coverage Run Directory. The 
                              coverage data will be present under 
                              <cov_db_dir>/xsim.covdb/<cov_db_name> 
                              directory.Default is ./ or inherits value set 
                              in similar xelab option.
  [-cov_db_name]              System Verilog Coverage Run Name. The coverage 
                              data will be present under 
                              <cov_db_dir>/xsim.covdb/<cov_db_name> 
                              directory.Default is snapshot name or inherits 
                              value set in similar xelab option.
  [-ignore_assertions]        Ignore System Verilog concurrent assertion 
                              constructs at runtime.
  [-ignore_coverage]          Ignore System Verilog Functional Coverage at 
                              runtime.
  [-downgrade_error2info]     Downgrade System verilog message severity from 
                              error to info level.
  [-downgrade_error2warning]  Downgrade System verilog message severity from 
                              error to warning level.
  [-downgrade_fatal2info]     Downgrade System verilog message severity from 
                              fatal to info level.
  [-downgrade_fatal2warning]  Downgrade System verilog message severity from 
                              fatal to warning level.
  [-ignore_feature]           Specify System Verilog feature to be ignored at
                              runtime. Choices are: assertion : Ignore 
                              concurrent assertions.
  [-downgrade_severity]       Downgrade severity level of System Verilog HDL 
                              messages.Choices are: error2warning|error2info|
                              fatal2warning|fatal2info.
  [-quiet]                    Ignore command errors
  [-verbose]                  Suspend message limits during command execution
  <snapshot>                  The name of design snapshot or WDB file

Categories: 
Simulation

Description:

  The xsim command loads a simulation snapshot to run a batch mode
  simulation, or to provide a GUI and/or Tcl-based interactive simulation
  environment. The snapshot must be generated using the xelab command.

Arguments:

  -view <arg> - (Optional) Open a wave configuration file to store the
  waveform activity for the simulation. The Wave Config file contains just
  the list of wave objects (signals, dividers, groups, virtual buses) to
  display, and their display properties, plus markers. A wave configuration
  file is written in the current simulation with the save_wave_config
  command.

  Note: This option may be repeated to open multiple Wave Config files.

  -autoloadwcfg - (Optional) When loading a wave database (WDB) file named
  <name>.wdb, automatically open all associated wave config files WCFG named
  <name>#.wcfg. This option is ignored if -view is also specified.

  -runall | -R - (Optional) Run the simulation until no event is left in the
  event queue, a breakpoint or valid condition is encountered, or a run time
  exception occurs. Then quit the simulator. This is the equivalent of `run
  -all; exit`.

  -maxdeltaid <arg> - (Optional) Specify the maximum number of delta cycles
  as an integer greater than 0. The default value is 10000.The simulator will
  report an error if it exceeds the specified maximum number of simulation
  loops, or delta cycles, at simulation run time. Refer to the Vivado Design
  Suite User Guide: Logic Simulation (UG900) for more information on delta
  cycles.

  -nolog - (Optional) This option is provided for compatibility with the
  command line XSIM utility, and is ignored when running in Tcl in the Vivado
  Design Suite.

  -maxlogsize <arg> - (Optional) The maximum size for a simulation log file,
  specified as a value in MBytes. The default value of -1, means the log file
  has no size limit.

  -onfinish [ stop | quit ] - (Optional) Specify the actions of the simulator
  upon finishing the simulation run. Valid values are stop the simulation, or
  quit the simulator. The default is stop.

  -onerror [ stop | quit ] - (Optional} Specify the actions of the simulator
  upon encountering an error. Valid values are stop the simulation, or quit
  the simulator. The default is stop.

  -tclbatch | -t - (Optional) Specify a Tcl script file to run the simulator
  in batch mode.

  -testplusarg <args> - (Optional) Specify plusargs to be used by
  $test$plusargs and $value$plusargs system functions. These arguments are
  visually distinguished from other simulator arguments by starting with the
  plus (`+`) character.

  -vcdfile <arg> - (Optional) Specify a Value Change Dump (VCD) file to
  capture simulation output.

  -vcdunit <arg> - (Optional) Specify the time unit for the VCD output. The
  default unit is the same as the simulation engine precision.

  -wdb <arg> - (Optional) Specify the simulation waveform database (WDB)
  file. When the simulation completes, the simulation is written to a static
  simulator database file. The file can be opened for later review by the
  open_wave_database command.

  -tp - (Optional) Print the hierarchical names of process being executed to
  the standard output.

  -tl - (Optional) Print the file name and line number of statements being
  executed to the standard output.

  -nosignalhandlers - (Optional) Disables the installation of OS-level signal
  handlers in the simulation. With the signal handlers disabled, OS-level
  fatal errors could crash the simulation abruptly with little indication of
  the nature of the failure.

  Note: Use this option only if your security software prevents the simulator
  from running successfully.

  -ieeewarnings - (Optional) Enable warnings generated by the use of VHDL
  IEEE functions. Use this option to enable warnings that are disabled by
  default since these warnings can generally be ignored.

  -stats - (Optional) Display statistics related to memory and CPU usage upon
  exiting the simulator.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <snapshot> - (Required) The name of the simulation snapshot to be executed,
  or WDB file to be opened for viewing. The snapshot must have been
  previously compiled by xelab. The WDB file must have been previously saved
  using the -wdb option of the xsim command.

Examples:

  The following example launches xsim on the specified simulation snapshot:

    xsim C:/Data/project_xsim/project_xsim.sim/sim_1/behav/testbench_behav 
    

See Also:

   *  launch_simulation

Vivado% launch_simulation
INFO: [Vivado 12-5682] Launching behavioral simulation in 'C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/Homework5.sim/sim_1/behav/xsim'
INFO: [SIM-utils-51] Simulation object is 'sim_1'
INFO: [SIM-utils-54] Inspecting design source files for 'fifoTB' in fileset 'sim_1'...
INFO: [USF-XSim-97] Finding global include files...
INFO: [USF-XSim-98] Fetching design files from 'sim_1'...
INFO: [USF-XSim-2] XSim::Compile design
INFO: [USF-XSim-61] Executing 'COMPILE and ANALYZE' step in 'C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/Homework5.sim/sim_1/behav/xsim'
"xvlog --incr --relax -prj fifoTB_vlog.prj"
INFO: [VRFC 10-2263] Analyzing SystemVerilog file "C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifo.sv" into library xil_defaultlib
INFO: [VRFC 10-311] analyzing module fifo
INFO: [VRFC 10-2263] Analyzing SystemVerilog file "C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifo_ctrl.sv" into library xil_defaultlib
INFO: [VRFC 10-311] analyzing module fifo_ctrl
INFO: [VRFC 10-2263] Analyzing SystemVerilog file "C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/reg_file.sv" into library xil_defaultlib
INFO: [VRFC 10-311] analyzing module reg_file
INFO: [VRFC 10-2263] Analyzing SystemVerilog file "C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifoTB.sv" into library xil_defaultlib
INFO: [VRFC 10-311] analyzing module fifoTB
INFO: [USF-XSim-69] 'compile' step finished in '2' seconds
INFO: [USF-XSim-3] XSim::Elaborate design
INFO: [USF-XSim-61] Executing 'ELABORATE' step in 'C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/Homework5.sim/sim_1/behav/xsim'
Vivado Simulator 2018.3
Copyright 1986-1999, 2001-2018 Xilinx, Inc. All Rights Reserved.
Running: C:/Xilinx/Vivado/2018.3/bin/unwrapped/win64.o/xelab.exe -wto 19406983508c4966a6dfb42277e6e789 --incr --debug typical --relax --mt 2 -L xil_defaultlib -L unisims_ver -L unimacro_ver -L secureip --snapshot fifoTB_behav xil_defaultlib.fifoTB xil_defaultlib.glbl -log elaborate.log 
Using 2 slave threads.
Starting static elaboration
Completed static elaboration
Starting simulation data flow analysis
WARNING: [XSIM 43-4099] "C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifo.sv" Line 2. Module fifo(DATA_WIDTH=16,ADDR_WIDTH=3) doesn't have a timescale but at least one module in design has a timescale.
WARNING: [XSIM 43-4099] "C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifo_ctrl.sv" Line 5. Module fifo_ctrl(ADDR_WIDTH=3) doesn't have a timescale but at least one module in design has a timescale.
WARNING: [XSIM 43-4099] "C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/reg_file.sv" Line 2. Module reg_file(DATA_WIDTH=16,ADDR_WIDTH=3) doesn't have a timescale but at least one module in design has a timescale.
Completed simulation data flow analysis
Time Resolution for simulation is 1ps
Compiling module xil_defaultlib.fifo_ctrl(ADDR_WIDTH=3)
Compiling module xil_defaultlib.reg_file(DATA_WIDTH=16,ADDR_WIDT...
Compiling module xil_defaultlib.fifo(DATA_WIDTH=16,ADDR_WIDTH=3)
Compiling module xil_defaultlib.fifoTB
Compiling module xil_defaultlib.glbl
Built simulation snapshot fifoTB_behav

****** Webtalk v2018.3 (64-bit)
  **** SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
  **** IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
    ** Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

source C:/Users/Axelb/Documents/School/WSU -notrace
invalid command name "%"
    while executing
"% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current"
    (file "C:/Users/Axelb/Documents/School/WSU" line 1)
INFO: [Common 17-206] Exiting Webtalk at Fri Feb 22 14:52:39 2019...
run_program: Time (s): cpu = 00:00:00 ; elapsed = 00:00:07 . Memory (MB): peak = 260.145 ; gain = 0.000
INFO: [USF-XSim-69] 'elaborate' step finished in '7' seconds
INFO: [USF-XSim-4] XSim::Simulate design
INFO: [USF-XSim-61] Executing 'SIMULATE' step in 'C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/Homework5.sim/sim_1/behav/xsim'
INFO: [USF-XSim-98] *** Running xsim
   with args "fifoTB_behav -key {Behavioral:sim_1:Functional:fifoTB} -tclbatch {fifoTB.tcl} -log {simulate.log}"
INFO: [USF-XSim-8] Loading simulator feature
Vivado Simulator 2018.3
Time resolution is 1 ps
source fifoTB.tcl
# set curr_wave [current_wave_config]
# if { [string length $curr_wave] == 0 } {
#   if { [llength [get_objects]] > 0} {
#     add_wave /
#     set_property needs_save false [current_wave_config]
#   } else {
#      send_msg_id Add_Wave-1 WARNING "No top level signals found. Simulator will start without a wave window. If you want to open a wave window go to 'File->New Waveform Configuration' or type 'create_wave_config' in the TCL console."
#   }
# }
# run 1000ns
Error: both 'empty' and 'full' are 1
Time: 0 ps  Iteration: 0  Process: /fifoTB/f0/c_unit/Always14_1  File: C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifo_ctrl.sv
Warning: Trying to write while full, OVERFLOW!
Time: 90 ns  Iteration: 0  Process: /fifoTB/f0/c_unit/Always14_1  File: C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifo_ctrl.sv
Warning: read attempted when FIFO is empty.
Time: 180 ns  Iteration: 0  Process: /fifoTB/f0/c_unit/Always14_1  File: C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifo_ctrl.sv
Info: FIFO is empty as expected
Time: 241 ns  Iteration: 0  Process: /fifoTB/Initial31_3  File: C:/Users/Axelb/Documents/School/WSU Spring 2019/ECE 324/Homework5/fifoTB.sv
INFO: [USF-XSim-96] XSim completed. Design snapshot 'fifoTB_behav' loaded.
INFO: [USF-XSim-97] XSim simulation ran for 1000ns
launch_simulation: Time (s): cpu = 00:00:01 ; elapsed = 00:00:14 . Memory (MB): peak = 267.008 ; gain = 10.332
Vivado% synthesis
invalid command name "synthesis"
Vivado% help -synthesis
ERROR: [Common 17-170] Unknown option '-synthesis', please type 'help -help' for usage info.

Vivado% help
Topic Categories:
Bitgen
Board
CDC
DRC
Debug
Device
Feasibility
FileIO
Floorplan
GUIControl
IPFlow
IPIntegrator
Memory
Memory Initialization
Methodology
Netlist
Object
Partition
PinPlanning
Power
Project
PropertyAndParameter
Report
SDAccel
SDC
SDSoC
Simulation
SysGen
Tcl
TclBuiltIn
TclPackage
Timing
ToolLaunch
Tools
Waiver
Waveform
XDC
XPS
projutils
simulation
synthesis
user-written
xilinxtclstore
To list help topics by category, type 'help -category <category>'. For example:
% help -category Project

Vivado% help -help synthesis
help

Syntax: 
help  [-category <arg>] [-args] [-syntax] [-long] [-prop <arg>] [-class <arg>]
      [-message <arg>] [-quiet] [-verbose] [<pattern_or_object>]


Vivado% help -category synthesis

Topic            Description
export_bd_synth  (User-written application)
                 Create and write a single design 
                 checkpoint and stub files for a Block Design (BD), for use 
                 with third party synthesis tools. Perform synthesis as 
                 necessary.
                 

For help on an individual topic, type 'help <topic>'. For example:
% help create_project

Vivado% synthesis -help
invalid command name "synthesis"
Vivado% Synthesis
invalid command name "Synthesis"
Vivado% help -category Synthesis

Topic            Description
export_bd_synth  (User-written application)
                 Create and write a single design 
                 checkpoint and stub files for a Block Design (BD), for use 
                 with third party synthesis tools. Perform synthesis as 
                 necessary.
                 

For help on an individual topic, type 'help <topic>'. For example:
% help create_project

Vivado% help -synthesis
ERROR: [Common 17-170] Unknown option '-synthesis', please type 'help -help' for usage info.

Vivado% help synthesis
ERROR: [Common 17-25] No topics matched 'synthesis'

Vivado% synthesis
invalid command name "synthesis"
Vivado% tcl package
ambiguous command name "tcl": tclLog tclPkgSetup tclPkgUnknown
Vivado% tcl_package
invalid command name "tcl_package"
Vivado% help -tclpackage
ERROR: [Common 17-170] Unknown option '-tclpackage', please type 'help -help' for usage info.

Vivado% help -help
help

Description: 
Display help for one or more topics

Syntax: 
help  [-category <arg>] [-args] [-syntax] [-long] [-prop <arg>] [-class <arg>]
      [-message <arg>] [-quiet] [-verbose] [<pattern_or_object>]

Usage: 
  Name                   Description
  ----------------------------------
  [-category]            Search for topics in the specified category
  [-args]                Display arguments description
  [-syntax]              Display syntax description
  [-long]                Display long help description
  [-prop]                Display property help for matching property names
                         Default: *
  [-class]               Display object type help
  [-message]             Display information about the message with the given 
                         message. Every message delivered by the tool has a 
                         unique global message ID that consists of an 
                         application sub-system code and a message identifier. 
                         Example: -message {Common 17-8}.
  [-quiet]               Ignore command errors
  [-verbose]             Suspend message limits during command execution
  [<pattern_or_object>]  Display help for topics that match the specified 
                         pattern
                         Default: *

Categories: 
Project

Description:

  Returns a long description of the specified Tcl command; or a list of
  available Xilinx Tcl command categories; or a list of commands matching a
  specific pattern.

  The default help command without any arguments returns a list of Tcl
  command categories that can be further explored. Command categories are
  groups of commands performing a specific function, like File I/O commands
  for instance.

  Available options for the help command can return just the command syntax
  for a quick reminder of how the command should be structured; the command
  syntax and a brief description of each argument; or the long form of the
  command with more detailed descriptions and examples of the command.

  To limit the memory usage of the Vivado Design Suite, some features of the
  tool are only loaded into memory when that feature set is used. To access
  the complete list of Tcl commands and help text associated with a given
  feature, you must load the feature into memory using the load_features
  command.

  The help command can also return any available information related to
  various properties assignable to design objects. Use the -prop and -class
  options to return help information for properties.

  This command returns the specified help text, or an error.

Arguments:

  -category <arg> - (Optional) Get a list of the commands grouped under the
  specified command category.

  -args - (Optional) Get abbreviated help text for the specified command. The
  default is to return the extended help for the specified command. Use this
  argument to keep it brief.

  -syntax - (Optional) Returns only the syntax line for the command as a
  quick reminder of the proper form for using the command.

  -long - (Optional) Returns the extended help description for the command,
  including the syntax, a brief description of the arguments, and a more
  detailed description of the command with examples. This is the default
  setting for the help command.

  -prop <arg> - (Optional) Return the specified property of an object class,
  or the properties assigned to a specific object in the current design.

  Note: This option requires the use of -class, or the specification of a
  single design object.

  -class <arg> - (Optional) Return information related to the specified class
  of objects.

  -message <arg> - (Optional) Return information related to the specified
  message. Messages are specified in the form of a unique global message ID,
  that consists of an application sub-system code and a message identifier:
  "Common 17-24", or {Common 17-24}. Refer to the set_msg_config command for
  more information.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <pattern_or_object> - (Optional) Returns information related to the
  specified command, or a list of commands that match the specified pattern.

  Note: A Vivado first class object, like a cell or site, must be specified
  when used with -class and -prop to return information about properties.

Examples:

  The following example returns a list of Xilinx Tcl command categories:

    help 
    

  This example loads the simulator feature of the Vivado Design Suite, and
  then returns a list of Tcl commands in the simulation and waveform
  categories:

    load_features simulator  
    help -category simulation  
    help -category waveform 
    

  Returns a list of all commands matching the specified search pattern:

    help *file* 
    

  This list can be used to quickly locate a command for a specific purpose,
  such as remove_files or delete_files.

  The following help command returns a long description of the remove_files
  command and its arguments:

    help remove_files 
    

  Note: You can also use the -args option to get a brief description of the
  command.

  This example defines a procedure called short, and returns the -args form
  of help for the specified command:

    proc short cmdName {help -args $cmdName} 
    

  Note: You can add this procedure to your init.tcl file to load this command
  every time the tool is launched. Refer to Chapter 1, Introduction of the
  Vivado Design Suite Tcl Command Reference (UG835) for more information on
  the init.tcl file.

  The following examples show how to obtain help for properties of design
  objects, or a class of design objects:

    help -class cell -prop NAME   
    help -prop NAME [get_cells cpuEngine] 
    

  Note: In the preceding example, the first command returns general
  information related to the NAME property, while the second command also
  returns the value of the NAME property on the specified design object.

See Also:

   *  get_cells

   *  list_features

   *  list_property

   *  load_features

   *  report_property

   *  set_msg_config

Vivado% project
invalid command name "project"
Vivado% Project
invalid command name "Project"
Vivado% exit
INFO: [Common 17-206] Exiting Vivado at Fri Feb 22 15:05:25 2019...
